#include <Arduino.h>
#include <driver/ledc.h>
//Constantes de canales para leds
const int rchannel = 0;
const int vchannel = 1;
const int bchannel = 2;
//Frecuencia y resolucion
const int freqPWM = 5000;
const int resolucion = 8;
//Pines de los leds y botones
const int ledRojo = 13;
const int ledVerde = 21;
const int ledAzul = 5;
const int botselec = 14; //Boton para seleccionar
const int botbrillo = 25; //Boton para la intensidad de la luz
const int debounceDelay = 50;
//Variables para el debounce de los botones
unsigned long lastDebounceTime1 = 0;
unsigned long lastDebounceTime2 = 0;
bool lastButtonState1 = HIGH;
bool lastButtonState2 = HIGH;
bool buttonState1 = HIGH;
bool buttonState2 = HIGH;
//Contadores para los casos e intensidad de la luz
int contador = 0;
int brillo = 0;
//Declarar la funcion para configurar el PWM
void configurar(void);

void setup() {
  configurar();
  pinMode(botselec, INPUT_PULLUP);
  pinMode(botbrillo, INPUT_PULLUP);
}

void loop() {
  int reading1 = digitalRead(botselec);
  int reading2 = digitalRead(botbrillo);
  //Debounce para el boton de seleccion
  if ((millis() - lastDebounceTime1) > debounceDelay) {
    if (reading1 != lastButtonState1) {
      lastDebounceTime1 = millis();
      lastButtonState1 = reading1;
      if (lastButtonState1 == LOW) {
        contador = (contador + 1) % 3;
      }
    }
  }
  // Debounce para el boton de intesidad de las leds
  if ((millis() - lastDebounceTime2) > debounceDelay) {
    if (reading2 != lastButtonState2) {
      lastDebounceTime2 = millis();
      lastButtonState2 = reading2;
      if (lastButtonState2 == LOW) {
        brillo += 10;
        if (brillo > 255) {
          brillo = 0;
        }
      }
    }
  }
  //Casos para que se enciendan las leds 
  switch (contador) {
    case 0: 
      ledcWrite(rchannel, brillo);
      ledcWrite(vchannel, 0);
      ledcWrite(bchannel, 0);
      break;
    case 1: 
      ledcWrite(rchannel, 0);
      ledcWrite(vchannel, brillo);
      ledcWrite(bchannel, 0);
      break;
    case 2: 
      ledcWrite(rchannel, 0);
      ledcWrite(vchannel, 0);
      ledcWrite(bchannel, brillo);
      break;
  }
}

void configurar() {
  ledcSetup(rchannel, freqPWM, resolucion);
  ledcSetup(vchannel, freqPWM, resolucion);
  ledcSetup(bchannel, freqPWM, resolucion);

  ledcAttachPin(ledRojo, rchannel);
  ledcAttachPin(ledVerde, vchannel);
  ledcAttachPin(ledAzul, bchannel);
}